version: '3.8'

services:
  # Prometheus - Metrics collection and storage
  prometheus:
    image: prom/prometheus:latest
    container_name: sommos-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    labels:
      com.sommos.service: "prometheus"
      com.sommos.description: "Metrics collection and storage"

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sommos-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3002
      - GF_INSTALL_PLUGINS=redis-datasource,grafana-clock-panel
    networks:
      - monitoring
    depends_on:
      - prometheus
    labels:
      com.sommos.service: "grafana"
      com.sommos.description: "Metrics visualization and dashboards"

  # AlertManager - Alert routing and management (optional)
  # alertmanager:
  #   image: prom/alertmanager:latest
  #   container_name: sommos-alertmanager
  #   restart: unless-stopped
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
  #     - alertmanager-data:/alertmanager
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #     - '--storage.path=/alertmanager'
  #   networks:
  #     - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  # alertmanager-data:
  #   driver: local

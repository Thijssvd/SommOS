name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  jest-tests:
    name: Jest Unit & Integration Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Jest tests
        run: npm test -- --coverage --maxWorkers=2
        env:
          NODE_ENV: test
          CI: true
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: matrix.node-version == '20.x'
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: jest-coverage
      
      - name: Store coverage artifacts
        uses: actions/upload-artifact@v3
        if: matrix.node-version == '20.x'
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30
  
  playwright-tests:
    name: Playwright E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run Playwright tests
        run: npx playwright test
        env:
          CI: true
      
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      
      - name: Upload Playwright test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-results
          path: test-results/
          retention-days: 7
  
  test-flakiness-detection:
    name: Flakiness Detection
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run Jest tests 3 times
        run: |
          echo "Run 1:"
          npm test -- --silent --maxWorkers=2 > jest-run1.log 2>&1 || echo "Run 1 had failures"
          echo "Run 2:"
          npm test -- --silent --maxWorkers=2 > jest-run2.log 2>&1 || echo "Run 2 had failures"
          echo "Run 3:"
          npm test -- --silent --maxWorkers=2 > jest-run3.log 2>&1 || echo "Run 3 had failures"
        continue-on-error: true
        env:
          NODE_ENV: test
          CI: true
      
      - name: Analyze flakiness
        run: |
          echo "## Flakiness Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Compare test results across runs
          if grep -q "Tests:.*failed" jest-run1.log jest-run2.log jest-run3.log; then
            echo "⚠️ Test failures detected across runs" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Run 1:" >> $GITHUB_STEP_SUMMARY
            grep "Tests:" jest-run1.log >> $GITHUB_STEP_SUMMARY || echo "No summary found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Run 2:" >> $GITHUB_STEP_SUMMARY
            grep "Tests:" jest-run2.log >> $GITHUB_STEP_SUMMARY || echo "No summary found" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Run 3:" >> $GITHUB_STEP_SUMMARY
            grep "Tests:" jest-run3.log >> $GITHUB_STEP_SUMMARY || echo "No summary found" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ All test runs consistent" >> $GITHUB_STEP_SUMMARY
          fi
        continue-on-error: true
      
      - name: Upload flakiness logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: flakiness-logs
          path: jest-run*.log
          retention-days: 7
  
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [jest-tests, playwright-tests]
    if: always()
    
    steps:
      - name: Create test summary
        run: |
          echo "# Test Suite Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Status" >> $GITHUB_STEP_SUMMARY
          echo "- Jest Tests: ${{ needs.jest-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Playwright Tests: ${{ needs.playwright-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.jest-tests.result }}" == "success" ] && [ "${{ needs.playwright-tests.result }}" == "success" ]; then
            echo "✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed. Check the job logs for details." >> $GITHUB_STEP_SUMMARY
          fi
